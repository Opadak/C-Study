C#에서 이벤트는 event라는 키워드를 사용하여 표시하며, 
클래스 내에서 일종의 필드처럼 정의된다. 
이벤트에 가입하는 외부 가입자 측에서는 이벤트가 발생했을 때 
어떤 명령들을 실행할지를 지정해 주는데, 이를 이벤트 핸들러라 한다.

이벤트 함수는 내장 함수로써 
매개변수로 받아줘야 하는 값이 있다. 

이벤트는 클래스내에 특정한 일(event)이 있어났음을 
외부의 이벤트 가입자(subscriber)들에게 알려주는 기능을 한다. 
C#에서 이벤트는 event라는 키워드를 사용하여 표시하며, 
클래스 내에서 일종의 필드처럼 정의된다.

이벤트에 가입하는 외부 가입자 측에서는 이벤트가 발생했을 때
 어떤 명령들을 실행할 지를 지정해 주는데, 이를 이벤트 핸들러라 한다.
 이벤트에 가입하기 위해서는 += 연산자를 사용하여 이벤트핸들러를 이벤트에 추가한다.
 반대로 이벤트핸들러를 삭제하기 위해서는 -= 연산자를 사용한다. 
하나의 이벤트에는 여러 개의 이벤트핸들러들을 추가할 수 있으며,
 이벤트가 발생되면 추가된 이벤트핸들러들을 모두 차례로 호출한다.

다음 코드는 클래스(MyButton) 내에서 이벤트(Click)를 정의하고 이를 사용하는
 예제이다.
(주: 고급문법의 C# delegate에서 C# event와 delegate와의 관계가 자세히 설명)

// 클래스 내의 이벤트 정의
class MyButton
{
   public string Text;
   // 이벤트 정의
   public event EventHandler Click;

   public void MouseButtonDown()
   {
      if (this.Click != null)
      {
         // 이벤트핸들러들을 호출
         Click(this, EventArgs.Empty);
      }
   }
}

// 이벤트 사용
public void Run()
{
   MyButton btn = new MyButton();
   // Click 이벤트에 대한 이벤트핸들러로
   // btn_Click 이라는 메서드를 지정함
   btn.Click += new EventHandler(btn_Click);
   btn.Text = "Run";
   //....
}

void btn_Click(object sender, EventArgs e)
{
   MessageBox.Show("Button 클릭");
}
